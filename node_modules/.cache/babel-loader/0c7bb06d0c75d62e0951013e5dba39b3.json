{"ast":null,"code":"var _jsxFileName = \"/Users/decagon/Desktop/PERSONAL/udemy-REACT-QUERY/base-blog-em/src/PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery, useMutation } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchComments(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n  return response.json();\n}\nasync function deletePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"DELETE\"\n  });\n  return response.json();\n}\nasync function updatePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"PATCH\",\n    data: {\n      title: \"REACT QUERY FOREVER!!!!\"\n    }\n  });\n  return response.json();\n}\nexport function PostDetail(_ref) {\n  _s();\n  let {\n    post\n  } = _ref;\n  const {\n    data,\n    isLoading,\n    isError,\n    error\n  } = useQuery();\n  const deleteMutations = useMutation(postId => deletePost(postId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteMutations.mutate(),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), deleteMutations.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Error deleting the post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), deleteMutations.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"purple\"\n      },\n      children: \"Deleting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this), deleteMutations.isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"Post deleted successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Update title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), data.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [comment.email, \": \", comment.body]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(PostDetail, \"BhR6Ei8w9T6nwiy38QKU8oZ3jW4=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useQuery","useMutation","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchComments","postId","response","fetch","json","deletePost","method","updatePost","data","title","PostDetail","_ref","_s","post","isLoading","isError","error","deleteMutations","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mutate","isSuccess","body","map","comment","email","id","_c","$RefreshReg$"],"sources":["/Users/decagon/Desktop/PERSONAL/udemy-REACT-QUERY/base-blog-em/src/PostDetail.jsx"],"sourcesContent":["import { useQuery, useMutation } from \"react-query\";\n\nasync function fetchComments(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  );\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"DELETE\" }\n  );\n  return response.json();\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"PATCH\", data: { title: \"REACT QUERY FOREVER!!!!\" } }\n  );\n  return response.json();\n}\n\nexport function PostDetail({ post }) {\n  const { data, isLoading, isError, error } = useQuery(\n   \n  );\n  const deleteMutations = useMutation((postId) => deletePost(postId));\n\n  return (\n    <>\n      <h3 style={{ color: \"blue\" }}>{post.title}</h3>\n      <button onClick={() => deleteMutations.mutate()}>Delete</button>\n      {deleteMutations.isError && (\n        <p style={{ color: \"red\" }}>Error deleting the post</p>\n      )}\n      {deleteMutations.isLoading && <p style={{ color: \"purple\" }}>Deleting...</p>}\n      {deleteMutations.isSuccess && (\n        <p style={{ color: \"green\" }}>Post deleted successfully</p>\n      )}\n      <button>Update title</button>\n      <p>{post.body}</p>\n      <h4>Comments</h4>\n      {data.map((comment) => (\n        <li key={comment.id}>\n          {comment.email}: {comment.body}\n        </li>\n      ))}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}